##################BUILDER###############

# образ на основе которого создаём контейнер
FROM python:3.10-alpine as builder

# рабочая директория внутри проекта
WORKDIR /usr/src/APP

# переменные окружения для python
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Устанавливаем зависимости для Postgre
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev
RUN pip install --upgrade pip

# проверка кода через линтер
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 /usr/src/APP/django_project

# устанавливаем зависимости
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/APP/wheels -r requirements.txt


#################FINAL##################

FROM python:3.10-alpine

# создаем директорию для пользователя
RUN mkdir -p /home/mivainer

# создаем отдельного пользователя
RUN addgroup -S app && adduser -S mivainer -G app

# создание каталога для приложения
ENV HOME=/home/mivainer
ENV APP_HOME=/home/mivainer/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# установка зависимостей и копирование из builder
RUN apk update && apk add libpq
COPY --from=builder /usr/src/APP/wheels /wheels
COPY --from=builder /usr/src/APP/requirements.txt .
RUN pip install --no-cache /wheels/*


# копирование automigration.prod.sh
COPY ./automigration.prod.sh $APP_HOME

# копирование проекта Django
COPY . $APP_HOME

# изменение прав для пользователя app
RUN chown -R mivainer:app $APP_HOME

# изменение рабочего пользователя
USER mivainer

#добавим запуск этого скрипта c миграцией БД при запуске контейнера
ENTRYPOINT ["/home/mivainer/web/automigration.prod.sh"]


